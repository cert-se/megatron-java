# Handles a syslog file with an optional field (hostname).
#
# Example lines:
# Aug 28 00:49:06 ns2 rc.honeypot.pl[997]: honeypot connect [122.139.20.241] 
# Aug 28 00:49:08 ns2 rc.honeypot.pl[997]: honeypot connect pool-96-250-175-217.nycmny.fios.verizon.net [96.250.175.217]
# 
# Expanded reg-exp:
# ^(\w{3}\s+\d{1,2} \d\d:\d\d:\d\d).*?connect ([^\s\[]* |)\[(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}|)\]
#
# Test file:
# syslog-ip-plus-host.log

# Filter out syslog comment
filter.preLineProcessor.classNames.0=se.sitic.megatron.filter.RegExpLineFilter
filter.regExpLineFilter.excludeRegExp=last message repeated

# Timestamp: Aug 28 00:49:06
parser.item.logTimestamp=\w{3}\s+\d{1,2} \d\d:\d\d:\d\d
parser.timestampFormat=MMM dd HH:mm:ss
#parser.defaultTimeZone=CEST

# No DNS lookups; hostname and IP exists already in file.
decorator.classNames.0=se.sitic.megatron.decorator.CountryCodeFromHostnameDecorator
decorator.classNames.1=se.sitic.megatron.decorator.CountryCodeDecorator
decorator.classNames.2=se.sitic.megatron.decorator.AsnDecorator

# Hostname is optional (may be empty). Contains not space and not "[". 
parser.item.hostname=[^\s\[]* |

# Remove space from hostname
parser.trimValue=true

# Remove trailing spaces
parser.removeTrailingSpaces=true

# Line expression
parser.lineRegExp=^$logTimestamp.*?connect $hostname\[$ipAddress\]
