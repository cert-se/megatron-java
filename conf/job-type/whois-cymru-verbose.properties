# Verbose whois-format. Used for example by <whois.cymru.com>.
# More info: http://www.team-cymru.org/Services/ip-to-asn.html
#
# Example line: 
# 158     | 194.237.142.21   | 194.237.142.0/24    | SE | ripencc  | 1996-05-08 | ERI-AS - Ericsson Network Systems, Inc.
#
# Expanded reg-exp:
# ^(\d+)\s*\|\s*(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s*\|\s*.+\s*\|\s*(\w{1,2})\s*\|\s*.+\s*\|(.*)$

# -- Filter first line which is a comment
# Alt 1: Exclude comment line using a reg-exp
#filter.preLineProcessor.classNames.0=se.sitic.megatron.filter.RegExpLineFilter
#filter.regExpLineFilter.excludeRegExp=^Bulk mode
# Alt 2: Include only lines that have a valid prefix
#filter.preLineProcessor.classNames.0=se.sitic.megatron.filter.RegExpLineFilter
#filter.regExpLineFilter.includeRegExp=^\d+\s+\|
# Alt 3: Exclude first line
filter.preLineProcessor.classNames.0=se.sitic.megatron.filter.LineNumberFilter
filter.lineNumberFilter.excludeIntervals=1-1

# Parser Setup #1: The following fields are ignored: BGP Prefix, Registry, Allocated.
parser.item.freeText.0=.*
parser.lineRegExp=^$asn\s*\|\s*$ipAddress\s*\|\s*.+\s*\|\s*$countryCode\s*\|\s*.+\s*\|\s*.+\s*\| $freeText0$

# Parser Setup #2: Parses all fields. Additional items: BGP Prefix, Registry, Allocated.
#parser.item.additionalItem.bgpPrefix=\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/\d+
#parser.item.additionalItem.registry=\S+
#parser.item.additionalItem.allocated=\d{4}-\d{2}-\d{2}
#parser.item.freeText.0=.*
#parser.lineRegExp=^$asn\s*\|\s*$ipAddress\s*\|\s*$additionalItem_bgpPrefix\s*\|\s*$countryCode\s*\|\s*$additionalItem_registry\s*\|\s*$additionalItem_allocated\s*\| $freeText0$

#export.rowFile=whois_row.txt

#export.rowFile=whois-cymru-verbose_row.txt

export.headerFile=debug_header.txt
export.rowFile=debug_row.txt
export.footerFile=debug_footer.txt

#export.headerFile=debug_header.xml
#export.rowFile=debug_row.xml
#export.footerFile=debug_footer.xml
